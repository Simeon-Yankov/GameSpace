@model AllTournamentsQueryModel

@{
    ViewData["Title"] = "Upcoming tournaments";
}

<form method="get">
    <h3 class="heading-margin text-center"><strong>Upcoming LoL Tournaments</strong></h3>
    <br />
    <div class="row offset-3">
        <div class="form-group col-md-4">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="empty">
        </div>

        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Upcoming</option>
                    <option value="1">Name</option>
                </select>
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-outline-primary offset-8">Search</button>
</form>

<div class="row m-1">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <div class="card-deck flex-column-reverse">
            @foreach (var tournament in Model.Tournaments)
            {
                var prizePool = (int)tournament.PrizePool;
                <div class="card stand mb-1">
                    <div class="row no-gutters">
                        <div class="col-auto p-3">
                            <img src="/images/LoLogo.png" class="img-fluid" alt="Tournament image">
                        </div>
                        <div class="col">
                            <div class="card-block px-2">
                                <h4 class="card-title">
                                    @tournament.Name
                                    <span class="float-lg-right p-2">
                                        <small class="text-black-50">@(tournament.TicketPrize == 0 ? "Free" : $"Ticket - {@tournament.TicketPrize} Coins")</small>
                                    </span>
                                </h4>
                                <p class="card-text">
                                    <small>Region -</small> @tournament.RegionName <i class="fa fa-globe"></i>
                                    <span class="text-right">
                                        &emsp;<small>Capacity -</small> @tournament.MaximumTeams slots
                                    </span>
                                </p>

                                <p class="card-text">
                                    <small>Format -</small> @tournament.TeamSizeFormat &emsp; <small> Prize Pool -</small> @(prizePool == 0 ? "None" : prizePool + " Coins") &emsp; <a asp-controller="Tournament" asp-action="Details" asp-route-tournamentId="@tournament.Id" class="btn btn-success m-2 float-lg-right">Details</a>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer w-100 text-muted p-sm-1 ">
                        <small class="p-1">Hosted by <strong>@tournament.HosterName</strong> <span class="float-right p-1"><i class="fa fa-hourglass-end"></i> <strong>@tournament.StartsInMessage</strong></span></small>
                    </div>
                </div>
                <br />
            }

        </div>
    </div>
</div>

@{ var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalTournaments / AllTournamentsQueryModel.TournamentsPerPage); }

<div class="row mb-5">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="Tournament"
           asp-action="Upcoming"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                                 !Model.Tournaments.Any();
    }

    <div class="col-md-6">
        <a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="Tournament"
           asp-action="Upcoming"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

@if (!Model.Tournaments.Any())
{
    <h2 class="text-center">No tournaments found by the given criteria!</h2>
}