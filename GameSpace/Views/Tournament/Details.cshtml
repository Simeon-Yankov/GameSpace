@model TournamentViewModel

@{
    ViewData["Title"] = "Tournament Details";

    var time = @Model.StartsOn.ToString();
}
<div>
    <div class="row">
        <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
            <h1 class="text-center">@Model.Name</h1>
            <br />
            <div class="profile-tabs">
                <ul class="nav nav-pills nav-pills-icons justify-content-center" role="tablist">
                    <li class="nav-item active">
                        <a class="nav-link active" href="#details" role="tab" data-toggle="tab">
                            Details
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#rules" role="tab" data-toggle="tab">
                            Rules
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#prizes" role="tab" data-toggle="tab">
                            Prizes
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#participants" role="tab" data-toggle="tab">
                            Participants
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#media" role="tab" data-toggle="tab">
                            Media
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#contacts" role="tab" data-toggle="tab">
                            Contacts
                        </a>
                    </li>
                </ul>
            </div>
            <hr />
            <br />
            <div class="tab-content tab-space">
                <div class="tab-pane active gallery" id="details">
                    <div class="row">
                        <article class="w-100 p-2">
                            <p class="text-black-50">Region</p>
                            <p>@Model.RegionName</p>
                            <hr>
                            <p class="text-black-50">Date & Time</p>
                            <div class="info"><i class="material-icons text-black-50 float-right m-1">info</i></div>
                            <div class="hide">Check in starts 45 min before start.</div>
                            <p>@Model.StartsOn</p>

                            <hr>
                            <p class="text-black-50">Format</p>
                            <p> @Model.TeamSizeFormat</p>
                            <hr>
                            <p class="text-black-50">Map & Type</p>
                            <p>
                                @Model.MapName<br>
                                <solid><small class="text-black-55">@Model.ModeName</small></solid>
                            </p>
                            @if (Model.IsRegistrated)
                            {
                                <div class="float-md-right">
                                    <strong>Starts in </strong>
                                    <p id="timer"></p>
                                    @*<small>Check In starts 45 min before start</small>*@
                                    <a asp-controller="Tournament" asp-action="CheckIn" asp-route-tournamentId="@Model.Id" id="check-in" class="btn btn-danger disabled">Check In</a>
                                </div>
                            }
                            else
                            {
                                <a asp-controller="Tournament" asp-action="Participation" asp-route-tournamentId="@Model.Id" class="btn btn-danger float-md-right">Participate</a>
                            }
                        </article>
                    </div>
                </div>
                <div class="tab-pane text-center gallery" id="rules">
                    <div class="row">
                        <article class="w-100 p-2">
                            <p style="text-align: left; display:flex; flex-direction: column; align-items: center">@Model.Information</p>
                        </article>
                    </div>
                </div>
                <div class="tab-pane gallery" id="prizes">
                    <div class="row">
                        <article class="w-100 p-2">
                            @if (Model.PrizePool != 0)
                            {
                                <p class="text-black-50">Prize Pool</p>
                                <h5>@Model.PrizePool Coin</h5>
                                <hr>
                                <p class="text-black-50">Distribution</p>
                            }
                            @if (Model.PrizePool == 0)
                            {
                                <h3>There are no Prizes</h3>
                            }
                            else if (Model.BronzeMatch)
                            {
                                <p @*style="text-align: left; display:flex; flex-direction: column;  align-items: center"*@>
                                    1st place: @(Model.PrizePool / 2) Coin<br>
                                    2nd place: @(Model.PrizePool / 2 / 2) Coin<br>
                                    3rd place: @(Model.PrizePool / 2 / 2) Coin<br>
                                </p>
                            }
                            else
                            {
                                <p>
                                    1st place: @(Model.PrizePool / 2) Coin<br>
                                    2nd place: @(Model.PrizePool / 2 / 2) Coin <br>
                                    3rd & 4th places: @(Model.PrizePool / 2 / 2 / 2) Coin<br>
                                </p>
                            }
                        </article>
                    </div>
                </div>
                <div class="tab-pane text-center gallery" id="participants">
                    <div class="row">
                        <div class="card-deck p-2">
                            @foreach (var team in Model.Participants)
                            {
                                <div>
                                    <div class="card mb-3 container-fluid stand" style="width: 10rem;">
                                        @if (team.IsDefaultImage)
                                        {
                                            <img class="card-img-top" src="/images/12422580181795848664NYCS-bull-trans-T.svg.med.png" alt="Team @team.Name's image">
                                        }
                                        else
                                        {
                                            <img class="card-img-top" src="data:image;base64,@System.Convert.ToBase64String(team.Image)" alt="Team @team.Name's image">
                                        }
                                        <div class="card-body">
                                            <h5 class="card-title">@team.Name</h5>
                                            <p class="card-text"></p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="tab-pane text-center gallery" id="media">
                    <div class="row">
                        <p style="text-align: left; display:flex; flex-direction: column; align-items: center">
                            &emsp;Follow us on:<br>
                        </p>
                    </div>
                </div>
                <div class="tab-pane text-center gallery" id="contacts">
                    <div class="row">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set the date we're counting down to

        /**/
        var countDownDate = new Date("@Model.StartsOn").getTime();
        /**/

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("timer").innerHTML = days + "d " + hours + "h "
                + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            //clearInterval(x);
            //document.getElementById("timer").innerHTML = "Time to Check";

            if (/*minutes <= 45 && hours == 0 &&*/ days == 0) {

                let button = document.getElementById("check-in");

                button.className = "btn btn-danger";
            }
        }, 1000);
    </script>
}